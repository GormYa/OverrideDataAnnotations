<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentIsNullOrWhitespace" xml:space="preserve">
    <value>'{0}' bağımsız değişkeni boş olamaz, boş olamaz veya yalnızca boşluk içeremez.</value>
    <comment>The argument '{0}' cannot be null, empty or contain only white space.</comment>
  </data>
  <data name="AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties" xml:space="preserve">
    <value>'{0}' türü için ilişkili meta veri türü, aşağıdaki bilinmeyen özellikleri veya alanları içerir: {1}. Lütfen bu üyelerin adlarının ana türdeki özelliklerin adlarıyla eşleştiğinden emin olun.</value>
    <comment>The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type.</comment>
  </data>
  <data name="AttributeStore_Type_Must_Be_Public" xml:space="preserve">
    <value>'{0}' türü genel olmalıdır.</value>
    <comment>The type '{0}' must be public.</comment>
  </data>
  <data name="AttributeStore_Unknown_Method" xml:space="preserve">
    <value>'{0}' türü, '{1}' adında bir genel yöntem içermiyor.</value>
    <comment>The type '{0}' does not contain a public method named '{1}'.</comment>
  </data>
  <data name="AttributeStore_Unknown_Property" xml:space="preserve">
    <value>'{0}' türü, '{1}' adlı genel bir mülk içermiyor.</value>
    <comment>The type '{0}' does not contain a public property named '{1}'.</comment>
  </data>
  <data name="Common_NullOrEmpty" xml:space="preserve">
    <value>Değer null veya boş olamaz.</value>
    <comment>Value cannot be null or empty.</comment>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>{0}.{1} özelliği bulunamadı.</value>
    <comment>The property {0}.{1} could not be found.</comment>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>'{0}' ve '{1}' eşleşmiyor.</value>
    <comment>'{0}' and '{1}' do not match.</comment>
  </data>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>{0} adında bir özellik bulunamadı.</value>
    <comment>Could not find a property named {0}.</comment>
  </data>
  <data name="CreditCardAttribute_Invalid" xml:space="preserve">
    <value>{0} alanı geçerli bir kredi kartı numarası değil.</value>
    <comment>The {0} field is not a valid credit card number.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Must_Return_ValidationResult" xml:space="preserve">
    <value>'{1}' türündeki CustomValidationAttribute yöntemi '{0}' System.ComponentModel.DataAnnotations.ValidationResult döndürmelidir. Başarıyı temsil etmek için System.ComponentModel.DataAnnotations.ValidationResult.Success kullanın.</value>
    <comment>The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Not_Found" xml:space="preserve">
    <value>CustomValidationAttribute yöntemi '{0}', '{1}' türünde mevcut değil veya genel ve statik değil.</value>
    <comment>The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Required" xml:space="preserve">
    <value>CustomValidationAttribute.Method belirtilmedi.</value>
    <comment>The CustomValidationAttribute.Method was not specified.</comment>
  </data>
  <data name="CustomValidationAttribute_Method_Signature" xml:space="preserve">
    <value>'{1}' türündeki CustomValidationAttribute yöntemi '{0}', beklenen imzayla eşleşmelidir: public static ValidationResult {0}(nesne değeri, ValidationContext bağlamı). Değer güçlü bir şekilde yazılabilir. ValidationContext parametresi isteğe bağlıdır.</value>
    <comment>The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional.</comment>
  </data>
  <data name="CustomValidationAttribute_Type_Conversion_Failed" xml:space="preserve">
    <value>{2}.{3} yöntemiyle beklendiği gibi '{0}' türünün değeri '{1}' biçimine dönüştürülemedi.</value>
    <comment>Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}.</comment>
  </data>
  <data name="CustomValidationAttribute_Type_Must_Be_Public" xml:space="preserve">
    <value>'{0}' özel doğrulama türü genel olmalıdır.</value>
    <comment>The custom validation type '{0}' must be public.</comment>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} geçerli değil.</value>
    <comment>{0} is not valid.</comment>
  </data>
  <data name="CustomValidationAttribute_ValidatorType_Required" xml:space="preserve">
    <value>CustomValidationAttribute.ValidatorType belirtilmedi.</value>
    <comment>The CustomValidationAttribute.ValidatorType was not specified.</comment>
  </data>
  <data name="DataTypeAttribute_EmptyDataTypeString" xml:space="preserve">
    <value>Özel DataType dizesi tanımsız veya boş olamaz.</value>
    <comment>The custom DataType string cannot be null or empty.</comment>
  </data>
  <data name="DisplayAttribute_PropertyNotSet" xml:space="preserve">
    <value>{0} özelliği ayarlanmadı. Değeri almak için {1} yöntemini kullanın.</value>
    <comment>The {0} property has not been set.  Use the {1} method to get the value.</comment>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>{0} alanı geçerli bir e-posta adresi değil.</value>
    <comment>The {0} field is not a valid e-mail address.</comment>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>EnumDataTypeAttribute için sağlanan tür boş olamaz.</value>
    <comment>The type provided for EnumDataTypeAttribute cannot be null.</comment>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>'{0}' türünün bir numaralandırma türünü temsil etmesi gerekir.</value>
    <comment>The type '{0}' needs to represent an enumeration type.</comment>
  </data>
  <data name="FileExtensionsAttribute_Invalid" xml:space="preserve">
    <value>{0} alanı yalnızca aşağıdaki uzantılara sahip dosyaları kabul eder: {1}</value>
    <comment>The {0} field only accepts files with the following extensions: {1}</comment>
  </data>
  <data name="LocalizableString_LocalizationFailed" xml:space="preserve">
    <value>Yerelleştirme başarısız olduğundan '{0}' özelliği alınamıyor. '{1}' türü genel değil veya '{2}' adında bir genel statik dize özelliği içermiyor.</value>
    <comment>Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'.</comment>
  </data>
  <data name="MaxLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>MaxLengthAttribute, sıfırdan büyük bir uzunluk değerine sahip olmalıdır. Dizenin veya dizinin izin verilen maksimum uzunluğa sahip olabileceğini belirtmek için MaxLength()'i parametresiz kullanın.</value>
    <comment>MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</comment>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı, maksimum uzunluğu '{1}' olan bir dize veya dizi türü olmalıdır.</value>
    <comment>The field {0} must be a string or array type with a maximum length of '{1}'.</comment>
  </data>
  <data name="MetadataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>MetadataClassType boş olamaz.</value>
    <comment>MetadataClassType cannot be null.</comment>
  </data>
  <data name="MinLengthAttribute_InvalidMinLength" xml:space="preserve">
    <value>MinLengthAttribute, sıfır veya daha büyük bir Uzunluk değerine sahip olmalıdır.</value>
    <comment>MinLengthAttribute must have a Length value that is zero or greater.</comment>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı, minimum uzunluğu '{1}' olan bir dize veya dizi türü olmalıdır.</value>
    <comment>The field {0} must be a string or array type with a minimum length of '{1}'.</comment>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>{0} alanı geçerli bir telefon numarası değil.</value>
    <comment>The {0} field is not a valid phone number.</comment>
  </data>
  <data name="RangeAttribute_ArbitraryTypeNotIComparable" xml:space="preserve">
    <value>{0} türü, {1} uygulamalıdır.</value>
    <comment>The type {0} must implement {1}.</comment>
  </data>
  <data name="RangeAttribute_MinGreaterThanMax" xml:space="preserve">
    <value>'{0}' maksimum değeri, '{1}' minimum değerinden büyük veya ona eşit olmalıdır.</value>
    <comment>The maximum value '{0}' must be greater than or equal to the minimum value '{1}'.</comment>
  </data>
  <data name="RangeAttribute_Must_Set_Min_And_Max" xml:space="preserve">
    <value>Minimum ve maksimum değerler ayarlanmalıdır.</value>
    <comment>The minimum and maximum values must be set.</comment>
  </data>
  <data name="RangeAttribute_Must_Set_Operand_Type" xml:space="preserve">
    <value>OperandType, minimum ve maksimum değerler için dizeler kullanıldığında ayarlanmalıdır.</value>
    <comment>The OperandType must be set when strings are used for minimum and maximum values.</comment>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı {1} ile {2} arasında olmalıdır.</value>
    <comment>The field {0} must be between {1} and {2}.</comment>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı, '{1}' normal ifadesiyle eşleşmelidir.</value>
    <comment>The field {0} must match the regular expression '{1}'.</comment>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>Kalıp, geçerli bir normal ifadeye ayarlanmalıdır.</value>
    <comment>The pattern must be set to a valid regular expression.</comment>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı zorunludur.</value>
    <comment>The {0} field is required.</comment>
  </data>
  <data name="StringLengthAttribute_InvalidMaxLength" xml:space="preserve">
    <value>Maksimum uzunluk, negatif olmayan bir tam sayı olmalıdır.</value>
    <comment>The maximum length must be a nonnegative integer.</comment>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı, maksimum {1} uzunluğunda bir dize olmalıdır.</value>
    <comment>The field {0} must be a string with a maximum length of {1}.</comment>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>{0} alanı, minimum uzunluğu {2} ve maksimum uzunluğu {1} olan bir dize olmalıdır.</value>
    <comment>The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNotAString" xml:space="preserve">
    <value>'{1}' değerine sahip {0} konumundaki anahtar parametre bir dize değil. Her anahtar kontrol parametresi bir dize olmalıdır.</value>
    <comment>The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyIsNull" xml:space="preserve">
    <value>{0} konumundaki anahtar parametre boş. Her anahtar kontrol parametresi bir dize olmalıdır.</value>
    <comment>The key parameter at position {0} is null. Every key control parameter must be a string.</comment>
  </data>
  <data name="UIHintImplementation_ControlParameterKeyOccursMoreThanOnce" xml:space="preserve">
    <value>'{1}' değerine sahip {0} konumundaki anahtar parametre birden fazla kez ortaya çıkıyor.</value>
    <comment>The key parameter at position {0} with value '{1}' occurs more than once.</comment>
  </data>
  <data name="UIHintImplementation_NeedEvenNumberOfControlParameters" xml:space="preserve">
    <value>Kontrol parametrelerinin sayısı çift olmalıdır.</value>
    <comment>The number of control parameters must be even.</comment>
  </data>
  <data name="UrlAttribute_Invalid" xml:space="preserve">
    <value>{0} alanı, geçerli bir tam nitelikli http, https veya ftp URL'si değil.</value>
    <comment>The {0} field is not a valid fully-qualified http, https, or ftp URL.</comment>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>ErrorMessageString veya ErrorMessageResourceName ayarlanmalıdır, ancak ikisi birden değil.</value>
    <comment>Either ErrorMessageString or ErrorMessageResourceName must be set, but not both.</comment>
  </data>
  <data name="ValidationAttribute_IsValid_NotImplemented" xml:space="preserve">
    <value>IsValid(nesne değeri) bu sınıf tarafından uygulanmadı. Tercih edilen giriş noktası GetValidationResult()'dur ve sınıflar IsValid(nesne değeri, ValidationContext bağlamı) öğesini geçersiz kılmalıdır.</value>
    <comment>IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context).</comment>
  </data>
  <data name="ValidationAttribute_NeedBothResourceTypeAndResourceName" xml:space="preserve">
    <value>Bu öznitelikte hem ErrorMessageResourceType hem de ErrorMessageResourceName ayarlanmalıdır.</value>
    <comment>Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute.</comment>
  </data>
  <data name="ValidationAttribute_ResourcePropertyNotStringType" xml:space="preserve">
    <value>'{1}' kaynak türündeki '{0}' özelliği bir dize türü değil.</value>
    <comment>The property '{0}' on resource type '{1}' is not a string type.</comment>
  </data>
  <data name="ValidationAttribute_ResourceTypeDoesNotHaveProperty" xml:space="preserve">
    <value>'{0}' kaynak türü, '{1}' adlı erişilebilir bir statik özelliğe sahip değil.</value>
    <comment>The resource type '{0}' does not have an accessible static property named '{1}'.</comment>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} alanı geçersiz.</value>
    <comment>The field {0} is invalid.</comment>
  </data>
  <data name="ValidationContextServiceContainer_ItemAlreadyExists" xml:space="preserve">
    <value>Kapsayıcıda '{0}' türünde bir hizmet zaten var.</value>
    <comment>A service of type '{0}' already exists in the container.</comment>
  </data>
  <data name="ValidationContext_Must_Be_Method" xml:space="preserve">
    <value>'{0}' türü için ValidationContext, '{1}' üye adı MethodInfo'yu sağlamalıdır.</value>
    <comment>The ValidationContext for the type '{0}', member name '{1}' must provide the MethodInfo.</comment>
  </data>
  <data name="Validator_InstanceMustMatchValidationContextInstance" xml:space="preserve">
    <value>Sağlanan örnek, sağlanan ValidationContext üzerindeki ObjectInstance ile eşleşmelidir.</value>
    <comment>The instance provided must match the ObjectInstance on the ValidationContext supplied.</comment>
  </data>
  <data name="Validator_Property_Value_Wrong_Type" xml:space="preserve">
    <value>'{0}' özelliğinin değeri '{1}' türünde olmalıdır.</value>
    <comment>The value for property '{0}' must be of type '{1}'.</comment>
  </data>
</root>